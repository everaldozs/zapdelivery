// TESTE DE DIAGN√ìSTICO SUPABASE - EXCLUS√ÉO DE PEDIDOS
// Este arquivo vai identificar o problema real na exclus√£o

import { supabase } from './src/lib/supabase';

console.log('üîç INICIANDO DIAGN√ìSTICO SUPABASE - EXCLUS√ÉO DE PEDIDOS');

const diagnosticarExclusao = async () => {
  try {
    console.log('\n1Ô∏è‚É£ Testando conex√£o b√°sica...');
    
    // Testar conex√£o b√°sica
    const { data: testData, error: testError } = await supabase
      .from('pedidos')
      .select('codigo')
      .limit(1);
    
    if (testError) {
      console.error('‚ùå Erro de conex√£o:', testError);
      console.log('üîß PROBLEMA: Conex√£o com Supabase falhou');
      return;
    }
    
    console.log('‚úÖ Conex√£o OK');
    
    if (!testData || testData.length === 0) {
      console.log('‚ö†Ô∏è Nenhum pedido na base para testar');
    } else {
      console.log('üìä Pedido de exemplo encontrado:', testData[0].codigo);
    }
    
    console.log('\n2Ô∏è‚É£ Testando permiss√µes DELETE...');
    
    // Testar DELETE com condi√ß√£o imposs√≠vel (n√£o afeta dados)
    const { error: deleteError } = await supabase
      .from('pedidos')
      .delete()
      .eq('codigo', 'teste-inexistente-123456789');
    
    if (deleteError) {
      console.error('‚ùå ERRO DE PERMISS√ÉO DELETE:', deleteError);
      console.log('');
      console.log('üö® PROBLEMA IDENTIFICADO: Row Level Security (RLS)');
      console.log('');
      console.log('üîß SOLU√á√ÉO NECESS√ÅRIA:');
      console.log('1. Acesse o Supabase Dashboard');
      console.log('2. V√° em Authentication > Policies');
      console.log('3. Na tabela "pedidos", adicione policy DELETE:');
      console.log('   Nome: "Usu√°rios podem deletar pedidos"');
      console.log('   Comando: DELETE');
      console.log('   Roles: authenticated');
      console.log('   Policy: true (ou uma condi√ß√£o espec√≠fica)');
      console.log('');
      console.log('4. Na tabela "itens_pedido", adicione policy DELETE similar');
      console.log('');
      return;
    }
    
    console.log('‚úÖ Permiss√µes DELETE OK');
    
    console.log('\n3Ô∏è‚É£ Testando estrutura das tabelas...');
    
    // Verificar se as colunas existem
    try {
      await supabase.from('itens_pedido').select('codigo_pedido').limit(1);
      console.log('‚úÖ Tabela itens_pedido OK');
    } catch (err) {
      console.error('‚ùå Problema na tabela itens_pedido:', err);
    }
    
    console.log('\n4Ô∏è‚É£ Simulando exclus√£o...');
    console.log('‚ö†Ô∏è (N√£o executar√° exclus√£o real para preservar dados)');
    
    const simularExclusao = async (codigoPedido: string) => {
      console.log(`üóëÔ∏è Simulando exclus√£o do pedido: ${codigoPedido}`);
      
      // Simular contagem de itens
      const { count: itensCount } = await supabase
        .from('itens_pedido')
        .select('*', { count: 'exact', head: true })
        .eq('codigo_pedido', codigoPedido);
      
      console.log(`üì¶ Itens encontrados: ${itensCount || 0}`);
      
      console.log('‚úÖ Simula√ß√£o bem-sucedida');
    };
    
    // Se existe pedido de teste, simular
    if (testData && testData.length > 0) {
      await simularExclusao(testData[0].codigo);
    }
    
    console.log('\nüéâ DIAGN√ìSTICO CONCLU√çDO COM SUCESSO!');
    console.log('');
    console.log('üî¨ RESULTADO:');
    console.log('- Conex√£o: ‚úÖ OK');
    console.log('- Permiss√µes: ‚úÖ OK');
    console.log('- Estrutura: ‚úÖ OK');
    console.log('- L√≥gica: ‚úÖ OK');
    console.log('');
    console.log('ü§î SE O PROBLEMA PERSISTE, PODE SER:');
    console.log('1. Erro no frontend (console do navegador)');
    console.log('2. Estado n√£o est√° sendo atualizado corretamente');
    console.log('3. C√≥digo do pedido inv√°lido');
    
  } catch (error) {
    console.error('üí• ERRO NO DIAGN√ìSTICO:', error);
    console.log('');
    console.log('üîß CHECKLIST DE SOLU√á√ïES:');
    console.log('1. Verificar arquivo .env com credenciais Supabase');
    console.log('2. Verificar pol√≠ticas RLS no Supabase Dashboard');
    console.log('3. Verificar logs do Supabase em tempo real');
    console.log('4. Testar manualmente no SQL Editor do Supabase');
  }
};

// Executar diagn√≥stico
diagnosticarExclusao();
